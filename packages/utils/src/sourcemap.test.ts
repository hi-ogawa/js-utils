import { describe, expect, it } from "vitest";
import { decodeMappings } from "./sourcemap";

describe(decodeMappings, () => {
  it("basic", () => {
    expect(decodeMappings("")).toMatchInlineSnapshot(`[]`);
    expect(decodeMappings(";")).toMatchInlineSnapshot(`
      [
        [],
        [],
      ]
    `);
    expect(decodeMappings(";;")).toMatchInlineSnapshot(`
      [
        [],
        [],
        [],
      ]
    `);
    expect(decodeMappings("A,AAAB;;ABCDE;")).toMatchInlineSnapshot(`
      [
        [
          [
            0,
          ],
          [
            0,
            0,
            0,
            -2147483648,
          ],
        ],
        [],
        [
          [
            0,
            -2147483648,
            1,
            -2147483649,
            2,
          ],
        ],
        [],
      ]
    `);
    expect(
      decodeMappings(
        "AAAA,uCAAC,UAAY,KAAK,MAAQ,cAAc,KAAO,OAAO,MAAQ,MAAM,KAAO,MAAK;ACAhF,SAAS,OAAO;AACd,iCAAgB;AAChB,UAAQ,IAAI,OAAO;AACrB;AACA,KAAK;"
      )
    ).toMatchInlineSnapshot(`
      [
        [
          [
            0,
            0,
            0,
            0,
          ],
          [
            32,
            0,
            0,
            1,
          ],
          [
            42,
            0,
            0,
            13,
          ],
          [
            47,
            0,
            0,
            18,
          ],
          [
            53,
            0,
            0,
            26,
          ],
          [
            67,
            0,
            0,
            40,
          ],
          [
            72,
            0,
            0,
            47,
          ],
          [
            79,
            0,
            0,
            54,
          ],
          [
            85,
            0,
            0,
            62,
          ],
          [
            91,
            0,
            0,
            68,
          ],
          [
            96,
            0,
            0,
            75,
          ],
          [
            102,
            0,
            0,
            80,
          ],
        ],
        [
          [
            0,
            1,
            0,
            160,
          ],
          [
            9,
            1,
            0,
            169,
          ],
          [
            16,
            1,
            0,
            176,
          ],
        ],
        [
          [
            0,
            1,
            1,
            162,
          ],
          [
            32,
            1,
            1,
            178,
          ],
        ],
        [
          [
            0,
            1,
            2,
            194,
          ],
          [
            10,
            1,
            2,
            202,
          ],
          [
            14,
            1,
            2,
            206,
          ],
          [
            21,
            1,
            2,
            213,
          ],
        ],
        [
          [
            0,
            1,
            3,
            229,
          ],
        ],
        [
          [
            0,
            1,
            4,
            229,
          ],
          [
            5,
            1,
            4,
            234,
          ],
        ],
        [],
      ]
    `);
  });
});
